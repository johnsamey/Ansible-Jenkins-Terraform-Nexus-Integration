pipeline {
    agent none  
    stages {
        stage('clone_repo') {
            agent {
                docker {
                    image 'terraform'
                    args '-v /var/run/docker.sock:/var/run/docker.sock' 
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]){
                sh"""
                rm -rf Ansible-Jenkins-Terraform-Nexus-Integration
                git clone https://github.com/johnsamey/Ansible-Jenkins-Terraform-Nexus-Integration.git
                cd Ansible-Jenkins-Terraform-Nexus-Integration/terraform
                terraform init
                terraform plan
                terraform apply -auto-approve
                cd ..
                git init
                git add terraform/inventory.txt
                git commit -m "adding inventory.txt"
                git remote set-url origin https://${GIT_USER}:${GIT_PASS}@github.com/johnsamey/Ansible-Jenkins-Terraform-Nexus-Integration.git
                git push origin main
                cd terraform
                """
             }
                
            }
        }
        stage('ansible configration') {
            agent {
                docker {
                    image 'ansible'
                    args '-v /var/run/docker.sock:/var/run/docker.sock' 
                }
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]){
                sh"""
                rm -rf Ansible-Jenkins-Terraform-Nexus-Integration
                git clone https://github.com/johnsamey/Ansible-Jenkins-Terraform-Nexus-Integration.git
                cd Ansible-Jenkins-Terraform-Nexus-Integration/ansible
                chmod 400 nexus-task.pem
                ansible-playbook nuxus_playbook.yml -i ../terraform/inventory.txt --private-key nexus-task.pem --ssh-extra-args '-o StrictHostKeyChecking=no'
                """
             }
                
            }
        }
        
    }
}
